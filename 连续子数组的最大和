//动态规划，因为是相邻元素所以一个状态才会影响下一个数的状态，若连续的和是正数，才会对下一个数产生积极影响。
class Solution {
public:
    int maxSubArray(vector<int>& nums) {
        int len=nums.size();
        vector<int>a(len,0);
        if(nums.size()==0)return 0;
        a[0]=nums[0];
        for(int i=1;i<nums.size();i++){
            if(a[i-1]<0)a[i]=nums[i];
            else a[i]=a[i-1]+nums[i];
        }
        sort(a.begin(),a.end());
        
        return a[len-1];
    }
};