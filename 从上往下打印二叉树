/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> levelOrder(TreeNode* root) {
        vector<vector<int>>a;
        queue<TreeNode*>q;
        int k=0;
        if(root==NULL)return a;
        q.push(root);
        while(!q.empty()){
            vector<int>c;
            int l=q.size();
            for(int i=0;i<l;i++){
               TreeNode* t=q.front();
               c.push_back(t->val);
               q.pop();
               if(t->left)q.push(t->left);
               if(t->right)q.push(t->right);
           }
           a.push_back(c);
        }
        int row=a.size();
        for(int i=0;i<row;i++){
            if(i%2!=0)a[i]=last(a[i]);
        }
        return a;
    }
    vector<int> last(vector<int> num){
        int i=0,j=num.size()-1;
        while(i<j){
            swap(num[i],num[j]);
            i++;
            j--;
        }
        return num;
    }
};